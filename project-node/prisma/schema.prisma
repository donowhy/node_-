generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id               BigInt       @id @default(autoincrement())
  create_time      DateTime?    @db.DateTime(6)
  update_time      DateTime?    @db.DateTime(6)
  content          String?      @db.VarChar(300)
  member_member_id BigInt?
  post_id          BigInt?
  member           member?      @relation(fields: [member_member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "FKo408axpwswl3s4824x98gcby5")
  post             post?        @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKs1slvnkuemjsq2kj4h3vhx7i1")
  re_comment       re_comment[]

  @@index([member_member_id], map: "FKo408axpwswl3s4824x98gcby5")
  @@index([post_id], map: "FKs1slvnkuemjsq2kj4h3vhx7i1")
}

model like_post {
  id               BigInt    @id @default(autoincrement())
  create_time      DateTime? @db.DateTime(6)
  update_time      DateTime? @db.DateTime(6)
  member_member_id BigInt?
  post_id          BigInt?
  member           member?   @relation(fields: [member_member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "FKhxidq8xbcktgnsraklj7lgtws")
  post             post?     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKnu91sbh82a5nj1o3xh0sgwhu8")

  @@index([member_member_id], map: "FKhxidq8xbcktgnsraklj7lgtws")
  @@index([post_id], map: "FKnu91sbh82a5nj1o3xh0sgwhu8")
}

model member {
  member_id     BigInt       @id @default(autoincrement())
  create_time   DateTime?    @db.DateTime(6)
  update_time   DateTime?    @db.DateTime(6)
  email         String?      @unique(map: "UK_mbmcqelty0fbrvxp1q58dn57t") @db.VarChar(30)
  login_id      String?      @db.VarChar(255)
  nickname      String?      @db.VarChar(255)
  open_privacy  Boolean?     @db.Bit(1)
  password      String?      @db.VarChar(255)
  refresh_token String?      @db.VarChar(255)
  role          member_role?
  comment       comment[]
  like_post     like_post[]
  post          post[]
  re_comment    re_comment[]
  todo_list     todo_list[]
}

model post {
  id               BigInt       @id @default(autoincrement())
  create_time      DateTime?    @db.DateTime(6)
  update_time      DateTime?    @db.DateTime(6)
  content          String?      @db.VarChar(255)
  title            String?      @db.VarChar(255)
  member_member_id BigInt?
  comment          comment[]
  like_post        like_post[]
  member           member?      @relation(fields: [member_member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "FK6fhxjpyi39cyxa7xwdj80bpq")
  post_views       post_views[] @ignore
  tag              tag[]

  @@index([member_member_id], map: "FK6fhxjpyi39cyxa7xwdj80bpq")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model post_views {
  post_id BigInt
  views   BigInt?
  post    post    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK8a1o0yvf8ee1udcj1vp8k5d22")

  @@index([post_id], map: "FK8a1o0yvf8ee1udcj1vp8k5d22")
  @@ignore
}

model re_comment {
  id               BigInt    @id
  create_time      DateTime? @db.DateTime(6)
  update_time      DateTime? @db.DateTime(6)
  content          String?   @db.VarChar(255)
  comment_id       BigInt?
  member_member_id BigInt?
  member           member?   @relation(fields: [member_member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "FKfntfyfiora59ypgqd3aqdia2m")
  comment          comment?  @relation(fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FKlbau13r2qs2dvla5g9k3xnmpd")

  @@index([member_member_id], map: "FKfntfyfiora59ypgqd3aqdia2m")
  @@index([comment_id], map: "FKlbau13r2qs2dvla5g9k3xnmpd")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model re_comment_seq {
  next_val BigInt?

  @@ignore
}

model tag {
  id          BigInt    @id @default(autoincrement())
  create_time DateTime? @db.DateTime(6)
  update_time DateTime? @db.DateTime(6)
  name        String?   @db.VarChar(255)
  post_id     BigInt?
  post        post?     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK7tk5hi5tl1txftyn44dtq2mv6")

  @@index([post_id], map: "FK7tk5hi5tl1txftyn44dtq2mv6")
}

model todo_list {
  id               BigInt               @id @default(autoincrement())
  create_time      DateTime?            @db.DateTime(6)
  update_time      DateTime?            @db.DateTime(6)
  checked          Boolean              @db.Bit(1)
  content          String?              @db.VarChar(255)
  important        todo_list_important?
  local_date       DateTime?            @db.Date
  member_member_id BigInt?
  member           member?              @relation(fields: [member_member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "FKenu9wa31vqjfw3u0sukqhywyc")

  @@index([member_member_id], map: "FKenu9wa31vqjfw3u0sukqhywyc")
}

enum todo_list_important {
  HIGH
  LOW
  MIDDLE
}

enum member_role {
  ADMIN
  USER
}
